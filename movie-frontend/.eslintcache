[{"C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\reportWebVitals.js":"1","C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\index.js":"2","C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\pages\\App.js":"3","C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\components\\Question.js":"4","C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\pages\\QuestionPage.js":"5"},{"size":362,"mtime":1610534740255,"results":"6","hashOfConfig":"7"},{"size":506,"mtime":1611036117770,"results":"8","hashOfConfig":"7"},{"size":367,"mtime":1611042900971,"results":"9","hashOfConfig":"7"},{"size":8401,"mtime":1611554856651,"results":"10","hashOfConfig":"7"},{"size":3570,"mtime":1611554796690,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mmj8gb",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\index.js",[],"C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\pages\\App.js",["25","26","27","28","29"],"import \"./App.css\";\nimport React from \"react\";\nimport {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Link, Route} from \"react-router-dom\"; \nimport Question from \"../components/Question\";\n\nclass App extends React.Component {\n  render(){\n    return(\n        <div className=\"App\">\n        <Question/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\components\\Question.js",["30","31","32"],"import { Alert } from 'antd';\r\nimport \"../pages/App.css\";\r\nimport React from 'react';\r\nimport {Component} from 'react';\r\nimport {BrowserRouter as Router, Switch, Link, Route} from \"react-router-dom\"; \r\n// import FirstQuestion from '../pages/FirstQuestion';\r\n// import SecondQuestion from '../pages/SecondQuestion';\r\n// import ThirdQuestion from '../pages/ThirdQuestion';\r\nimport QuestionPage from '../pages/QuestionPage';\r\n\r\n\r\nclass Question extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.state = {\r\n            userAnswer : [\r\n                {'id' : 1, 'result' : 0 },{'id' : 2, 'result' : 0 },\r\n                {'id' : 3, 'result' : 0 },{'id' : 4, 'result' : 0 },\r\n                {'id' : 5, 'result' : 0 },{'id' : 6, 'result' : 0 },\r\n                {'id' : 7, 'result' : 0 },{'id' : 8, 'result' : 0 },\r\n                {'id' : 9, 'result' : 0 },{'id' : 10, 'result' : 0 },\r\n             {'id' : 11, 'result' : 0 },{'id' : 12, 'result' : 0 }],\r\n            questionArray :[\r\n                {'id' : 1, 'question' : '당신의 지금 기분은 어떤가요?' },\r\n                {'id' : 2, 'question' : '조금 더 구체적으로?' },\r\n                {'id' : 3, 'question' : '지금 기분을 유지하고 싶나요?' },\r\n                {'id' : 4, 'question' : '청소년때 학교에서 해당 과목 관련 영화를 보여주면 당신은 어떻게 행동했나요?'},\r\n                {'id' : 5, 'question' : '평소 영화, 드라마, 책의 내용에 대해 당신의 반응은 어떤가요?' },\r\n                {'id' : 6, 'question' : '평소 영화를 볼 때 더 중요하게 생각하는 것은 어떤 것인가요?' },\r\n                {'id' : 7, 'question' : '영화를 보고 난 후 주로 어떻게 행동하나요?' },\r\n                {'id' : 8, 'question' : '둘 중 어떤 종류의 캐릭터를 더 좋아하시나요?' },\r\n                {'id' : 9, 'question' : '열린 결말의 영화를 보고나서 당신은 어떤 생각을 하나요?' },\r\n                {'id' : 10, 'question' : '일이 많았던 오늘, 하루를 영화를 보면서 마무리하고싶은데 어떻게 영화를 볼까요?' },\r\n                {'id' : 11, 'question' : '복잡하고 다양한 해석이 존재하는 영화를 보고나서 당신은 어떤 생각을하나요?' },\r\n                {'id' : 12, 'question' : '영화가 어땠냐고 물어보는 친구한테 어떤 식으로 설명할 것인가요?' }] ,\r\n            selectList : [ \r\n                {'id' : 1, 'choice' : ['기쁨', '그냥', '슬픔']},\r\n                {'id' : 3, 'choice' : ['네','아니오'] },\r\n                {'id' : 4, 'choice' : ['지루한 내용이더라도 흥미있게 보는 편이었다.','지루하면 보지 않고 바로 딴 짓을 하거나 잠을 잔다.']},\r\n                {'id' : 5, 'choice' : ['주인공이나 특정 인물에 감정이입을 많이 하는 편이다.','주인공이나 특정 인물의 감정에 공감은 하지만 별개이며 허구의 이야기임을 확실히 자각하면서 본다.']},\r\n                {'id' : 6, 'choice' : ['좋은 스토리와 대사','화려하고 세련된 영상미'] },\r\n                {'id' : 7, 'choice' : ['영화의 내용이나 결말에 대해 생각하면서 곱씹어본다.','간단히 재밌었다, 재미없었다 정도만 생각하고 넘긴다.'] },\r\n                {'id' : 8, 'choice' : ['무조건 만능, 제일 강한 캐릭터','갖은 고난을 겪고 힘겹게 극복하는 대기만성형 캐릭터'] },\r\n                {'id' : 9, 'choice' : ['아 뭔가 찜찜한데... 그냥 결말을 정해주지...','내가 원하는대로 그냥 생각해야지~'] },\r\n                {'id' : 10, 'choice' : ['영화관에서 본다.','집에서 본다.'] },\r\n                {'id' : 11, 'choice' : ['영화는 머리 식힐려고 보는 것이기때문에 재밌게 보지 못했다.','다양한 해석에 신기해하고 흥미롭게 본다.'] },\r\n                {'id' : 12, 'choice' : ['내가 느낀 감정을 주 이야기로 말한다.','스토리를 설명한다.'] }] \r\n        }\r\n    }\r\n    onChange = (answer,number) => {\r\n        const {userAnswer} = this.state;\r\n            // console.log('1 number :', number);\r\n            // console.log('2 answer :', answer);\r\n            this.setState({\r\n                userAnswer : userAnswer.map( \r\n                    ans => ans.id === number\r\n                        ? ({...ans, result : answer})\r\n                        : ans)})\r\n            console.log('user Answer:', this.state.userAnswer[number-1].result);\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                  <div className=\"black-nav\">\r\n          <div style={{color:\"white\",fontSize:'30px'}}>영화 장르 추천</div>\r\n         </div>\r\n         <Router>\r\n           <Switch>\r\n            {/* <Route exact path=\"/\" render={()=> <FirstQuestion firstAns = {this.state.userAnswer[0].result} onChange = {this.onChange}/>}/>\r\n            <Route exact path=\"/SecondQuestion\" render={()=><SecondQuestion firstAns = {this.state.userAnswer[0].result} secondAns={this.state.userAnswer[1].result} onChange ={this.onChange}/> }/>\r\n            <Route exact path=\"/ThirdQuestion\" render={()=><ThirdQuestion thirdAns={this.state.userAnswer[2].result} onChange={this.onChange}/>} /> */}\r\n            <Route exact path='/' render={()=> <QuestionPage  questionArray = {this.state.questionArray[0]} answer = {this.state.userAnswer[0].result} choiceList = {this.state.selectList[0].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-2' render={()=> <QuestionPage questionArray = {this.state.questionArray[1]} firstAns = {this.state.userAnswer[0].result} answer={this.state.userAnswer[1].result} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-3' render={()=> <QuestionPage questionArray = {this.state.questionArray[2]} answer = {this.state.userAnswer[2].result} choiceList = {this.state.selectList[1].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-4' render={()=> <QuestionPage questionArray = {this.state.questionArray[3]} answer = {this.state.userAnswer[3].result} choiceList = {this.state.selectList[2].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-5' render={()=> <QuestionPage questionArray = {this.state.questionArray[4]} answer = {this.state.userAnswer[4].result} choiceList = {this.state.selectList[3].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-6' render={()=> <QuestionPage questionArray = {this.state.questionArray[5]} answer = {this.state.userAnswer[5].result} choiceList = {this.state.selectList[4].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-7' render={()=> <QuestionPage questionArray = {this.state.questionArray[6]} answer = {this.state.userAnswer[6].result} choiceList = {this.state.selectList[5].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-8' render={()=> <QuestionPage questionArray = {this.state.questionArray[7]} answer = {this.state.userAnswer[7].result} choiceList = {this.state.selectList[6].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-9' render={()=> <QuestionPage questionArray = {this.state.questionArray[8]} answer = {this.state.userAnswer[8].result} choiceList = {this.state.selectList[7].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-10' render={()=> <QuestionPage questionArray = {this.state.questionArray[9]} answer = {this.state.userAnswer[9].result} choiceList = {this.state.selectList[8].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-11' render={()=> <QuestionPage questionArray = {this.state.questionArray[10]} answer = {this.state.userAnswer[10].result} choiceList = {this.state.selectList[9].choice} onChange = {this.onChange}/>}/>\r\n            <Route exact path='/Question-12' render={()=> <QuestionPage questionArray = {this.state.questionArray[11]} answer = {this.state.userAnswer[11].result} choiceList = {this.state.selectList[10].choice} onChange = {this.onChange}/>}/>\r\n           </Switch>\r\n         </Router>\r\n         </div>\r\n        );                            \r\n    }\r\n}\r\n\r\nexport default Question;","C:\\Users\\user\\Desktop\\movie\\movie-frontend\\src\\pages\\QuestionPage.js",["33","34","35","36","37","38","39","40","41"],"import React from 'react';\r\nimport {Link, Route, BrowserRouter as Router, BrowserRouter} from \"react-router-dom\"\r\nimport {Radio} from 'antd';\r\n\r\nclass QuestionPage extends React.Component{\r\n    constructor(props){\r\n    super(props);\r\n    this.sliceEmotion = this.sliceEmotion.bind(this);\r\n    this.onChangeAns = this.onChangeAns.bind(this);\r\n    this.state={\r\n        answer : 0,\r\n        nextpage :['/','/Question-2','/Question-3','/Question-4','/Question-5','/Question-6',\r\n        '/Question-7','/Question-8','/Question-9','/Question-10','/Question-11','/Question-12',]\r\n        }\r\n        \r\n    }\r\n    onChangeAns = (e)=>{\r\n        this.setState({answer:e.target.value})\r\n        console.log(\"questionarray id :\", this.props.questionArray.id);\r\n        this.props.onChange(e.target.value,this.props.questionArray.id);\r\n    } \r\n\r\n\r\n    sliceEmotion = (firstans,emotions)=>{\r\n        var start =0, end =0;\r\n        // console.log(\"first : \",firstans);\r\n        // console.log(\"[0]\", emotions[0]);\r\n\r\n        if(firstans == 1) { start = 0; end= 5; }\r\n        else if(firstans == 2)  {start = 5; end =12;}\r\n        else if(firstans == 3) {start = 12; end =18;}\r\n        //const emotion = emotions.filter(emo => emo.id < start && emo.id > end);\r\n        const emotion = emotions.slice(start,end);\r\n        console.log('List : ', emotion);\r\n        \r\n        return emotion;\r\n    }\r\n    render(){\r\n        if(this.props.questionArray.id == 2) {\r\n            var EmotionList = [\r\n                {id:1, emotion: '신남'},\r\n                {id:2, emotion: '설렘'},\r\n                {id:3, emotion: '편안함'},\r\n                {id:4, emotion: '만족함'},\r\n                {id:5, emotion: '활기참'},\r\n                {id:6, emotion: '귀찮음'},\r\n                {id:7, emotion: '지루함'},\r\n                {id:8, emotion: '편안함'},\r\n                {id:9, emotion: '홀가분'},\r\n                {id:10, emotion: '힐링'},\r\n                {id:11, emotion: '심심'},\r\n                {id:12, emotion: '그리움'},\r\n                {id:13, emotion: '서러움'},\r\n                {id:14, emotion: '외로움'},\r\n                {id:15, emotion: '우울함'},\r\n                {id:16, emotion: '막막함'},\r\n                {id:17, emotion: '속상함'},\r\n                {id:18, emotion: '괴로움'},\r\n            ]            \r\n            var sliceemotion = this.sliceEmotion(this.props.firstAns,EmotionList);\r\n        }\r\n            const secondAns = this.state.secondAns;\r\n\r\n        return(\r\n            <div>\r\n                <h1>{this.props.questionArray.question} </h1>\r\n                {\r\n                    this.props.questionArray.id != 2 &&\r\n                    <Radio.Group onChange={this.onChangeAns} value = {this.state.answer} >\r\n                        {this.props.choiceList.map((m,index)=>(<Radio value={index+1} key ={index}> {m} </Radio>))}\r\n                    </Radio.Group>\r\n                } \r\n                {\r\n                    this.props.questionArray.id === 2 &&\r\n                    <Radio.Group onChange={this.onChangeAns} value = {this.state.answer} >\r\n                        {sliceemotion.map((m,index)=>(<Radio value={m.id} key ={index}> {m.emotion} </Radio>))}\r\n                    </Radio.Group>\r\n                }      \r\n                {\r\n                this.props.answer !== 0 && <Link to= {this.state.nextpage[this.props.questionArray.id]}><button onClick = {()=>this.setState({answer : 0})}> 다음</button></Link>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionPage",{"ruleId":"42","severity":1,"message":"43","line":3,"column":9,"nodeType":"44","messageId":"45","endLine":3,"endColumn":18},{"ruleId":"42","severity":1,"message":"46","line":4,"column":26,"nodeType":"44","messageId":"45","endLine":4,"endColumn":32},{"ruleId":"42","severity":1,"message":"47","line":4,"column":34,"nodeType":"44","messageId":"45","endLine":4,"endColumn":40},{"ruleId":"42","severity":1,"message":"48","line":4,"column":42,"nodeType":"44","messageId":"45","endLine":4,"endColumn":46},{"ruleId":"42","severity":1,"message":"49","line":4,"column":48,"nodeType":"44","messageId":"45","endLine":4,"endColumn":53},{"ruleId":"42","severity":1,"message":"50","line":1,"column":10,"nodeType":"44","messageId":"45","endLine":1,"endColumn":15},{"ruleId":"42","severity":1,"message":"43","line":4,"column":9,"nodeType":"44","messageId":"45","endLine":4,"endColumn":18},{"ruleId":"42","severity":1,"message":"48","line":5,"column":42,"nodeType":"44","messageId":"45","endLine":5,"endColumn":46},{"ruleId":"42","severity":1,"message":"49","line":2,"column":15,"nodeType":"44","messageId":"45","endLine":2,"endColumn":20},{"ruleId":"42","severity":1,"message":"46","line":2,"column":39,"nodeType":"44","messageId":"45","endLine":2,"endColumn":45},{"ruleId":"42","severity":1,"message":"51","line":2,"column":47,"nodeType":"44","messageId":"45","endLine":2,"endColumn":60},{"ruleId":"52","severity":1,"message":"53","line":29,"column":21,"nodeType":"54","messageId":"55","endLine":29,"endColumn":23},{"ruleId":"52","severity":1,"message":"53","line":30,"column":26,"nodeType":"54","messageId":"55","endLine":30,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":31,"column":26,"nodeType":"54","messageId":"55","endLine":31,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":39,"column":40,"nodeType":"54","messageId":"55","endLine":39,"endColumn":42},{"ruleId":"42","severity":1,"message":"56","line":62,"column":19,"nodeType":"44","messageId":"45","endLine":62,"endColumn":28},{"ruleId":"52","severity":1,"message":"57","line":68,"column":49,"nodeType":"54","messageId":"55","endLine":68,"endColumn":51},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Alert' is defined but never used.","'BrowserRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'secondAns' is assigned a value but never used.","Expected '!==' and instead saw '!='."]